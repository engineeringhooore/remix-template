# Ref: https://github.com/zainfathoni/kelas.rumahberbagi.com/blob/main/.github/workflows/test.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  cache:
    name: Cache dependencies
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

  lint:
    name: Lint
    needs: cache
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint files
        run: pnpm run lint

  type-check:
    name: Type check
    needs: cache
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        run: pnpm run ts:check

  component-test:
    name: Component test
    needs: cache
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Component test
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          pnpm run test:related:coverage $(git diff --name-only origin/$GITHUB_BASE_REF)

  e2e-test:
    name: End-to-End test
    needs: cache
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install operating system dependencies
        run: pnpm exec playwright install-deps

      - name: Restore cached Playwright dependencies
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml')
            }}-${{ hashFiles('**/playwright.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-playwright-i

      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: pnpm exec playwright install

      - name: Cache Playwright dependencies
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}-${{
            hashFiles('**/playwright.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-playwright-i

      - name: E2E test
        run: pnpm run test:e2e
